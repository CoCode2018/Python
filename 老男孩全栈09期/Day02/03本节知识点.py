"""
1.Pycharm基本使用
    路径不要有中文
    debug
    红色错误
    灰色不标准

2.格式化输出

3.while-else循环
    循环正常结束时会执行else语句；循环被break打断时不会执行else语句

4.编码
    编码表，计算机按照编码表解析和合成二进制数据
    ascii   2**8 = 256位    八位(8bit = 1byte)表示一个数据，最左边全为零，预留的原因
        1byte = 8bit
        1KB = 1024byte
        1MB = 1024KB
        1GB = 1024MB
        1TB = 1024GB
    Unicode 万国码
        Unicode 是「字符集」 
        UTF-8 是「编码规则」 

        其中: 字符集:为每一个「字符」分配分配一个唯一的 ID(学名为码位 / 码点 / Code Point) 
            编码规则:将「码位」转换为字节序列的规则（编码/解码 可以理解为 加密/解密 的过程）
        广义的 Unicode 是一个标准,定义了一个字符集以及一系列的编码规则,即 Unicode 字符集和 UTF-8、UTF-16、UTF-32 等等编码……
        UTF-8 顾名思义,是一套以 8 位为一个编码单位的可变长编码。会将一个码位编码为 1 到 4 个字节：

        UTF-8是Unicode的实现方式之一
        UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。
        https://zhidao.baidu.com/question/55064977.html
        Unicode只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。
        一个英文字母用一个字节表示 ：左边为零，其余可以表示2 ** 7 == 128中(包含了英文、数字、特殊符号)
        其他语言使用4个字节表示一个字符，但是浪费严重，于是升级出了utf-8，使用3个字节表示一个字符
    utf-8   

5.运算符
    算数运算符
        +
        —
        *
        /   真除法, 总是精确的包含小数
        //  地板除, 向下取整除, 和操作数类型相关; 
        %
        **
    比较运算符: 返回True 和 False
        ==
        !=
        >
        >=
        <
        <=
    赋值运算符
        =
        +=
        -+
        *=
        /=
        //=
        %=
        **=
    逻辑运算符: and 和 or 返回使表达式返回的数据项、not返回True/False
        and
        or
        not
"""